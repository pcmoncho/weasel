"use strict";function getTreeIndexs(a,b,c){c.push(b),a[b].folders.length&&a[b].folders.forEach(b=>{let d=-1;a.forEach((a,c)=>{a.name===b&&(d=c)}),getTreeIndexs(a,d,c)})}const a=require("child_process").fork,b=require("fs");let g,c=require("../resources/folders"),d=require("../resources/rests"),f=(require("../resources/current-process"),require("../resources/options"));exports.listFolders=((a,b)=>{let e,d=a.params.name;e=c.find(a=>a.name===d),e||b.status(500).send("Unknown folder"),b.status(200).jsonp(e)}),exports.listRests=((a,b)=>{b.status(200).jsonp(d)}),exports.addFolder=((a,d)=>{let e=!1,f=a.params.name,g=a.body,h={},i=-1;h=c.find(a=>a.name===f),i=c.findIndex(a=>a.name===f),h.folders.forEach(a=>{a===g.name&&(e=!0)}),e?d.status(500).send("ELEMENT DUPLICATED"):(c.push(g),c[i].folders.push(g.name),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&d.status(500).send(a),d.status(200).send("ADDED")}))}),exports.addRest=((a,e)=>{let f=!1,g=a.params.name,h=a.body,i={},j=-1;i=c.find(a=>a.name===g),j=c.findIndex(a=>a.name===g),i.content.forEach(a=>{a.name===h.name&&(f=!0)}),f?e.status(500).send("ELEMENT DUPLICATED"):(d.push(h),c[j].content.push(h),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&e.status(500).send(a),b.writeFile("resources/rests.json",JSON.stringify(d),a=>{a&&e.status(500).send(a),e.status(200).send("ADDED")})}))}),exports.deleteFolder=((a,d)=>{let e=a.body.name,f=a.params.name,g=[],h=-1,i=-1,j=[];h=c.findIndex(a=>a.name===e),i=c.findIndex(a=>a.name===f),c.forEach((a,b)=>{let c=a.folders.indexOf(e);c!==-1&&g.push([b,c])}),g.forEach(a=>{c[a[0]].folders.splice(a[1],1)}),getTreeIndexs(c,h,j),j.reverse().forEach(a=>c.splice(a,1)),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&d.status(500).send(a),d.status(200).jsonp(c[i])})}),exports.deleteRest=((a,e)=>{let f=a.params.name,g=a.body,h=[],i=-1,j=-1;j=c.findIndex(a=>a.name===f),d.forEach((a,b)=>{a.name===g.name&&(i=b)}),c.forEach((a,b)=>{let c=-1;a.content.forEach((a,b)=>{a.name===g.name&&(c=b)}),c!==-1&&h.push([b,c])}),h.forEach(a=>{c[a[0]].content.splice(a[1],1)}),d.splice(i,1),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&e.status(500).send(a),b.writeFile("resources/rests.json",JSON.stringify(d),a=>{a&&e.status(500).send(a),e.status(200).jsonp(c[j])})})}),exports.removeRest=((a,d)=>{let e=a.params.name,f=-1,g={},h=-1,i=a.body;g=c.find(a=>a.name===e),f=c.findIndex(a=>a.name===e),h=g.content.findIndex(a=>a.name===i.name),console.log(`folder[${f}].content.splice(${h}, 1)`),c[f].content.splice(h,1),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&d.status(500).send(a),d.status(200).jsonp(c[f])})}),exports.addRestToFolder=((a,d)=>{let e=a.params.name,f=a.body,g=-1;g=c.findIndex(a=>a.name===e),c[g].content.push(f),b.writeFile("resources/folders.json",JSON.stringify(c),a=>{a&&d.status(500).send(a),d.status(200).jsonp(c[g])})}),exports.listOptions=((a,b)=>{b.status(200).jsonp(f)}),exports.saveOptions=((a,c)=>{console.log(f.port),console.log(a.body.port),f.port=a.body.port,b.writeFile("resources/options.json",JSON.stringify(f),a=>{a&&c.status(500).send(a),c.status(200).send("SUCCESS")})}),exports.start=((d,e)=>{let f=c.find(a=>a.name===d.params.name);b.writeFile("resources/current-process.json",JSON.stringify(f.content),b=>{b&&e.status(500).send(b);let c=a("index");c.on("message",a=>e.status(200).send(a)),g=c,e.status(200).send("OK")})}),exports.kill=((a,b)=>{g.kill(),b.status(200).send("KILLED")});
